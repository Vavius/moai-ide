/* Generated by Cython 0.19.2 on Wed Nov 27 22:36:48 2013 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_TPFLAGS_HAVE_VERSION_TAG 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj) || \
                                         PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (Py_TYPE(obj) == &PyBaseString_Type)
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__moaipy
#define __PYX_HAVE_API__moaipy
#include "moai-core/host.h"
#include "moai-sim/host.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return u_end - u - 1;
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    if (strcmp(PyBytes_AsString(default_encoding), "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        const char* default_encoding_c = PyBytes_AS_STRING(default_encoding);
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (ascii_chars_u == NULL) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (ascii_chars_b == NULL || strncmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
    }
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    default_encoding_c = PyBytes_AS_STRING(default_encoding);
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(sys);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "moaipy.pyx",
};

/*--- Type declarations ---*/
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_AKUContextID(AKUContextID);

static CYTHON_INLINE AKUContextID __Pyx_PyInt_from_py_AKUContextID(PyObject *);

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static int __Pyx_check_binary_version(void);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'cmoai' */

/* Module declarations from 'moaipy' */
#define __Pyx_MODULE_NAME "moaipy"
int __pyx_module_is_main_moaipy = 0;

/* Implementation of 'moaipy' */
static PyObject *__pyx_pf_6moaipy_AKUCreateContext(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_2AKUDeleteContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_context); /* proto */
static PyObject *__pyx_pf_6moaipy_4AKUGetContext(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_6AKUCreateContext(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_8AKUFinalize(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_10AKUSetContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_context); /* proto */
static PyObject *__pyx_pf_6moaipy_12AKUGetLuaState(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_14AKURunScript(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename); /* proto */
static PyObject *__pyx_pf_6moaipy_16AKURunString(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_script); /* proto */
static PyObject *__pyx_pf_6moaipy_18AKUFinalizeSim(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_20AKUInitializeSim(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_22AKUDetectGfxContext(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_24AKUGetSimStep(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_26AKUPause(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_pause); /* proto */
static PyObject *__pyx_pf_6moaipy_28AKUReleaseGfxContext(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_30AKURender(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_32AKUSetOrientation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_orientation); /* proto */
static PyObject *__pyx_pf_6moaipy_34AKUSetScreenDpi(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dpi); /* proto */
static PyObject *__pyx_pf_6moaipy_36AKUSetScreenSize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_width, PyObject *__pyx_v_height); /* proto */
static PyObject *__pyx_pf_6moaipy_38AKUSetViewSize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_width, PyObject *__pyx_v_height); /* proto */
static PyObject *__pyx_pf_6moaipy_40AKUSoftReleaseGfxResources(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_age); /* proto */
static PyObject *__pyx_pf_6moaipy_42AKUUpdate(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_6moaipy_44AKUReserveInputDevices(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_total); /* proto */
static PyObject *__pyx_pf_6moaipy_46AKUReserveInputDeviceSensors(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_total); /* proto */
static PyObject *__pyx_pf_6moaipy_48AKUSetInputConfigurationName(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_50AKUSetInputDevice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_52AKUSetInputDeviceActive(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_active); /* proto */
static PyObject *__pyx_pf_6moaipy_54AKUSetInputDeviceButton(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_56AKUSetInputDeviceCompass(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_58AKUSetInputDeviceKeyboard(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_60AKUSetInputDeviceLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_62AKUSetInputDeviceLocation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_64AKUSetInputDevicePointer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_66AKUSetInputDeviceTouch(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_68AKUSetInputDeviceWheel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6moaipy_70AKUEnqueueButtonEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_6moaipy_72AKUEnqueueCompassEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_heading); /* proto */
static PyObject *__pyx_pf_6moaipy_74AKUEnqueueKeyboardAltEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_6moaipy_76AKUEnqueueKeyboardControlEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_6moaipy_78AKUEnqueueKeyboardEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_keyID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_6moaipy_80AKUEnqueueKeyboardShiftEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down); /* proto */
static PyObject *__pyx_pf_6moaipy_82AKUEnqueueLevelEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_6moaipy_84AKUEnqueueLocationEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_longitude, PyObject *__pyx_v_latitude, PyObject *__pyx_v_altitude, PyObject *__pyx_v_hAccuracy, PyObject *__pyx_v_vAccuracy, PyObject *__pyx_v_speed); /* proto */
static PyObject *__pyx_pf_6moaipy_86AKUEnqueuePointerEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_6moaipy_88AKUEnqueueTouchEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_touchID, PyObject *__pyx_v_down, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_6moaipy_90AKUEnqueueTouchEventCancel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID); /* proto */
static PyObject *__pyx_pf_6moaipy_92AKUEnqueueWheelEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_value); /* proto */
static char __pyx_k_2[] = "/Users/vavius/moai/moai-ide/dev/moaipy/moaipy.pyx";
static char __pyx_k_23[] = "AKUReleaseGfxContext";
static char __pyx_k_35[] = "AKUSoftReleaseGfxResources";
static char __pyx_k_39[] = "AKUReserveInputDevices";
static char __pyx_k_42[] = "AKUReserveInputDeviceSensors";
static char __pyx_k_45[] = "AKUSetInputConfigurationName";
static char __pyx_k_50[] = "AKUSetInputDeviceActive";
static char __pyx_k_53[] = "AKUSetInputDeviceButton";
static char __pyx_k_56[] = "AKUSetInputDeviceCompass";
static char __pyx_k_59[] = "AKUSetInputDeviceKeyboard";
static char __pyx_k_62[] = "AKUSetInputDeviceLevel";
static char __pyx_k_65[] = "AKUSetInputDeviceLocation";
static char __pyx_k_68[] = "AKUSetInputDevicePointer";
static char __pyx_k_71[] = "AKUSetInputDeviceTouch";
static char __pyx_k_74[] = "AKUSetInputDeviceWheel";
static char __pyx_k_77[] = "AKUEnqueueButtonEvent";
static char __pyx_k_80[] = "AKUEnqueueCompassEvent";
static char __pyx_k_83[] = "AKUEnqueueKeyboardAltEvent";
static char __pyx_k_86[] = "AKUEnqueueKeyboardControlEvent";
static char __pyx_k_89[] = "AKUEnqueueKeyboardEvent";
static char __pyx_k_92[] = "AKUEnqueueKeyboardShiftEvent";
static char __pyx_k_95[] = "AKUEnqueueLevelEvent";
static char __pyx_k_98[] = "AKUEnqueueLocationEvent";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__z[] = "z";
static char __pyx_k_101[] = "AKUEnqueuePointerEvent";
static char __pyx_k_104[] = "AKUEnqueueTouchEvent";
static char __pyx_k_107[] = "AKUEnqueueTouchEventCancel";
static char __pyx_k_110[] = "AKUEnqueueWheelEvent";
static char __pyx_k__age[] = "age";
static char __pyx_k__dpi[] = "dpi";
static char __pyx_k__down[] = "down";
static char __pyx_k__name[] = "name";
static char __pyx_k__keyID[] = "keyID";
static char __pyx_k__pause[] = "pause";
static char __pyx_k__speed[] = "speed";
static char __pyx_k__total[] = "total";
static char __pyx_k__value[] = "value";
static char __pyx_k__width[] = "width";
static char __pyx_k__active[] = "active";
static char __pyx_k__height[] = "height";
static char __pyx_k__moaipy[] = "moaipy";
static char __pyx_k__script[] = "script";
static char __pyx_k__context[] = "context";
static char __pyx_k__heading[] = "heading";
static char __pyx_k__pointer[] = "pointer";
static char __pyx_k__touchID[] = "touchID";
static char __pyx_k__AKUPause[] = "AKUPause";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__altitude[] = "altitude";
static char __pyx_k__deviceID[] = "deviceID";
static char __pyx_k__filename[] = "filename";
static char __pyx_k__latitude[] = "latitude";
static char __pyx_k__sensorID[] = "sensorID";
static char __pyx_k__AKURender[] = "AKURender";
static char __pyx_k__AKUUpdate[] = "AKUUpdate";
static char __pyx_k__hAccuracy[] = "hAccuracy";
static char __pyx_k__longitude[] = "longitude";
static char __pyx_k__vAccuracy[] = "vAccuracy";
static char __pyx_k__AKUFinalize[] = "AKUFinalize";
static char __pyx_k__orientation[] = "orientation";
static char __pyx_k__AKURunScript[] = "AKURunScript";
static char __pyx_k__AKURunString[] = "AKURunString";
static char __pyx_k__AKUGetContext[] = "AKUGetContext";
static char __pyx_k__AKUGetSimStep[] = "AKUGetSimStep";
static char __pyx_k__AKUSetContext[] = "AKUSetContext";
static char __pyx_k__AKUFinalizeSim[] = "AKUFinalizeSim";
static char __pyx_k__AKUGetLuaState[] = "AKUGetLuaState";
static char __pyx_k__AKUSetViewSize[] = "AKUSetViewSize";
static char __pyx_k__AKUSetScreenDpi[] = "AKUSetScreenDpi";
static char __pyx_k__AKUCreateContext[] = "AKUCreateContext";
static char __pyx_k__AKUDeleteContext[] = "AKUDeleteContext";
static char __pyx_k__AKUInitializeSim[] = "AKUInitializeSim";
static char __pyx_k__AKUSetScreenSize[] = "AKUSetScreenSize";
static char __pyx_k__AKUSetInputDevice[] = "AKUSetInputDevice";
static char __pyx_k__AKUSetOrientation[] = "AKUSetOrientation";
static char __pyx_k__AKUDetectGfxContext[] = "AKUDetectGfxContext";
static PyObject *__pyx_n_s_101;
static PyObject *__pyx_n_s_104;
static PyObject *__pyx_n_s_107;
static PyObject *__pyx_n_s_110;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_n_s_23;
static PyObject *__pyx_n_s_35;
static PyObject *__pyx_n_s_39;
static PyObject *__pyx_n_s_42;
static PyObject *__pyx_n_s_45;
static PyObject *__pyx_n_s_50;
static PyObject *__pyx_n_s_53;
static PyObject *__pyx_n_s_56;
static PyObject *__pyx_n_s_59;
static PyObject *__pyx_n_s_62;
static PyObject *__pyx_n_s_65;
static PyObject *__pyx_n_s_68;
static PyObject *__pyx_n_s_71;
static PyObject *__pyx_n_s_74;
static PyObject *__pyx_n_s_77;
static PyObject *__pyx_n_s_80;
static PyObject *__pyx_n_s_83;
static PyObject *__pyx_n_s_86;
static PyObject *__pyx_n_s_89;
static PyObject *__pyx_n_s_92;
static PyObject *__pyx_n_s_95;
static PyObject *__pyx_n_s_98;
static PyObject *__pyx_n_s__AKUCreateContext;
static PyObject *__pyx_n_s__AKUDeleteContext;
static PyObject *__pyx_n_s__AKUDetectGfxContext;
static PyObject *__pyx_n_s__AKUFinalize;
static PyObject *__pyx_n_s__AKUFinalizeSim;
static PyObject *__pyx_n_s__AKUGetContext;
static PyObject *__pyx_n_s__AKUGetLuaState;
static PyObject *__pyx_n_s__AKUGetSimStep;
static PyObject *__pyx_n_s__AKUInitializeSim;
static PyObject *__pyx_n_s__AKUPause;
static PyObject *__pyx_n_s__AKURender;
static PyObject *__pyx_n_s__AKURunScript;
static PyObject *__pyx_n_s__AKURunString;
static PyObject *__pyx_n_s__AKUSetContext;
static PyObject *__pyx_n_s__AKUSetInputDevice;
static PyObject *__pyx_n_s__AKUSetOrientation;
static PyObject *__pyx_n_s__AKUSetScreenDpi;
static PyObject *__pyx_n_s__AKUSetScreenSize;
static PyObject *__pyx_n_s__AKUSetViewSize;
static PyObject *__pyx_n_s__AKUUpdate;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s__active;
static PyObject *__pyx_n_s__age;
static PyObject *__pyx_n_s__altitude;
static PyObject *__pyx_n_s__context;
static PyObject *__pyx_n_s__deviceID;
static PyObject *__pyx_n_s__down;
static PyObject *__pyx_n_s__dpi;
static PyObject *__pyx_n_s__filename;
static PyObject *__pyx_n_s__hAccuracy;
static PyObject *__pyx_n_s__heading;
static PyObject *__pyx_n_s__height;
static PyObject *__pyx_n_s__keyID;
static PyObject *__pyx_n_s__latitude;
static PyObject *__pyx_n_s__longitude;
static PyObject *__pyx_n_s__moaipy;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__orientation;
static PyObject *__pyx_n_s__pause;
static PyObject *__pyx_n_s__pointer;
static PyObject *__pyx_n_s__script;
static PyObject *__pyx_n_s__sensorID;
static PyObject *__pyx_n_s__speed;
static PyObject *__pyx_n_s__total;
static PyObject *__pyx_n_s__touchID;
static PyObject *__pyx_n_s__vAccuracy;
static PyObject *__pyx_n_s__value;
static PyObject *__pyx_n_s__width;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__z;
static PyObject *__pyx_k_tuple_3;
static PyObject *__pyx_k_tuple_8;
static PyObject *__pyx_k_tuple_10;
static PyObject *__pyx_k_tuple_12;
static PyObject *__pyx_k_tuple_14;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_25;
static PyObject *__pyx_k_tuple_27;
static PyObject *__pyx_k_tuple_29;
static PyObject *__pyx_k_tuple_31;
static PyObject *__pyx_k_tuple_33;
static PyObject *__pyx_k_tuple_37;
static PyObject *__pyx_k_tuple_40;
static PyObject *__pyx_k_tuple_43;
static PyObject *__pyx_k_tuple_46;
static PyObject *__pyx_k_tuple_48;
static PyObject *__pyx_k_tuple_51;
static PyObject *__pyx_k_tuple_54;
static PyObject *__pyx_k_tuple_57;
static PyObject *__pyx_k_tuple_60;
static PyObject *__pyx_k_tuple_63;
static PyObject *__pyx_k_tuple_66;
static PyObject *__pyx_k_tuple_69;
static PyObject *__pyx_k_tuple_72;
static PyObject *__pyx_k_tuple_75;
static PyObject *__pyx_k_tuple_78;
static PyObject *__pyx_k_tuple_81;
static PyObject *__pyx_k_tuple_84;
static PyObject *__pyx_k_tuple_87;
static PyObject *__pyx_k_tuple_90;
static PyObject *__pyx_k_tuple_93;
static PyObject *__pyx_k_tuple_96;
static PyObject *__pyx_k_tuple_99;
static PyObject *__pyx_k_codeobj_1;
static PyObject *__pyx_k_codeobj_4;
static PyObject *__pyx_k_codeobj_5;
static PyObject *__pyx_k_codeobj_6;
static PyObject *__pyx_k_codeobj_7;
static PyObject *__pyx_k_codeobj_9;
static PyObject *__pyx_k_tuple_102;
static PyObject *__pyx_k_tuple_105;
static PyObject *__pyx_k_tuple_108;
static PyObject *__pyx_k_codeobj_11;
static PyObject *__pyx_k_codeobj_13;
static PyObject *__pyx_k_codeobj_15;
static PyObject *__pyx_k_codeobj_16;
static PyObject *__pyx_k_codeobj_17;
static PyObject *__pyx_k_codeobj_18;
static PyObject *__pyx_k_codeobj_19;
static PyObject *__pyx_k_codeobj_21;
static PyObject *__pyx_k_codeobj_22;
static PyObject *__pyx_k_codeobj_24;
static PyObject *__pyx_k_codeobj_26;
static PyObject *__pyx_k_codeobj_28;
static PyObject *__pyx_k_codeobj_30;
static PyObject *__pyx_k_codeobj_32;
static PyObject *__pyx_k_codeobj_34;
static PyObject *__pyx_k_codeobj_36;
static PyObject *__pyx_k_codeobj_38;
static PyObject *__pyx_k_codeobj_41;
static PyObject *__pyx_k_codeobj_44;
static PyObject *__pyx_k_codeobj_47;
static PyObject *__pyx_k_codeobj_49;
static PyObject *__pyx_k_codeobj_52;
static PyObject *__pyx_k_codeobj_55;
static PyObject *__pyx_k_codeobj_58;
static PyObject *__pyx_k_codeobj_61;
static PyObject *__pyx_k_codeobj_64;
static PyObject *__pyx_k_codeobj_67;
static PyObject *__pyx_k_codeobj_70;
static PyObject *__pyx_k_codeobj_73;
static PyObject *__pyx_k_codeobj_76;
static PyObject *__pyx_k_codeobj_79;
static PyObject *__pyx_k_codeobj_82;
static PyObject *__pyx_k_codeobj_85;
static PyObject *__pyx_k_codeobj_88;
static PyObject *__pyx_k_codeobj_91;
static PyObject *__pyx_k_codeobj_94;
static PyObject *__pyx_k_codeobj_97;
static PyObject *__pyx_k_codeobj_100;
static PyObject *__pyx_k_codeobj_103;
static PyObject *__pyx_k_codeobj_106;
static PyObject *__pyx_k_codeobj_109;

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_1AKUCreateContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_1AKUCreateContext = {__Pyx_NAMESTR("AKUCreateContext"), (PyCFunction)__pyx_pw_6moaipy_1AKUCreateContext, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_1AKUCreateContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUCreateContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_AKUCreateContext(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":3
 * cimport cmoai
 * 
 * def AKUCreateContext():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUCreateContext()
 * 
 */

static PyObject *__pyx_pf_6moaipy_AKUCreateContext(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUCreateContext", 0);

  /* "moaipy.pyx":4
 * 
 * def AKUCreateContext():
 *     return cmoai.AKUCreateContext()             # <<<<<<<<<<<<<<
 * 
 * def AKUDeleteContext(context):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_to_py_AKUContextID(AKUCreateContext()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("moaipy.AKUCreateContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_3AKUDeleteContext(PyObject *__pyx_self, PyObject *__pyx_v_context); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_3AKUDeleteContext = {__Pyx_NAMESTR("AKUDeleteContext"), (PyCFunction)__pyx_pw_6moaipy_3AKUDeleteContext, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_3AKUDeleteContext(PyObject *__pyx_self, PyObject *__pyx_v_context) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUDeleteContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_2AKUDeleteContext(__pyx_self, ((PyObject *)__pyx_v_context));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":6
 *     return cmoai.AKUCreateContext()
 * 
 * def AKUDeleteContext(context):             # <<<<<<<<<<<<<<
 *     cmoai.AKUDeleteContext(context)
 * 
 */

static PyObject *__pyx_pf_6moaipy_2AKUDeleteContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_context) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  AKUContextID __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUDeleteContext", 0);

  /* "moaipy.pyx":7
 * 
 * def AKUDeleteContext(context):
 *     cmoai.AKUDeleteContext(context)             # <<<<<<<<<<<<<<
 * 
 * def AKUGetContext():
 */
  __pyx_t_1 = __Pyx_PyInt_from_py_AKUContextID(__pyx_v_context); if (unlikely((__pyx_t_1 == (AKUContextID)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUDeleteContext(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUDeleteContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_5AKUGetContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_5AKUGetContext = {__Pyx_NAMESTR("AKUGetContext"), (PyCFunction)__pyx_pw_6moaipy_5AKUGetContext, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_5AKUGetContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUGetContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_4AKUGetContext(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":9
 *     cmoai.AKUDeleteContext(context)
 * 
 * def AKUGetContext():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUGetContext()
 * 
 */

static PyObject *__pyx_pf_6moaipy_4AKUGetContext(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUGetContext", 0);

  /* "moaipy.pyx":10
 * 
 * def AKUGetContext():
 *     return cmoai.AKUGetContext()             # <<<<<<<<<<<<<<
 * 
 * def AKUCreateContext():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_to_py_AKUContextID(AKUGetContext()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("moaipy.AKUGetContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_7AKUCreateContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_7AKUCreateContext = {__Pyx_NAMESTR("AKUCreateContext"), (PyCFunction)__pyx_pw_6moaipy_7AKUCreateContext, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_7AKUCreateContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUCreateContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_6AKUCreateContext(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":12
 *     return cmoai.AKUGetContext()
 * 
 * def AKUCreateContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUCreateContext()
 * 
 */

static PyObject *__pyx_pf_6moaipy_6AKUCreateContext(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUCreateContext", 0);

  /* "moaipy.pyx":13
 * 
 * def AKUCreateContext():
 *     cmoai.AKUCreateContext()             # <<<<<<<<<<<<<<
 * 
 * def AKUFinalize():
 */
  AKUCreateContext();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_9AKUFinalize(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_9AKUFinalize = {__Pyx_NAMESTR("AKUFinalize"), (PyCFunction)__pyx_pw_6moaipy_9AKUFinalize, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_9AKUFinalize(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUFinalize (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_8AKUFinalize(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":15
 *     cmoai.AKUCreateContext()
 * 
 * def AKUFinalize():             # <<<<<<<<<<<<<<
 *     cmoai.AKUFinalize()
 * 
 */

static PyObject *__pyx_pf_6moaipy_8AKUFinalize(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUFinalize", 0);

  /* "moaipy.pyx":16
 * 
 * def AKUFinalize():
 *     cmoai.AKUFinalize()             # <<<<<<<<<<<<<<
 * 
 * def AKUSetContext(context):
 */
  AKUFinalize();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_11AKUSetContext(PyObject *__pyx_self, PyObject *__pyx_v_context); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_11AKUSetContext = {__Pyx_NAMESTR("AKUSetContext"), (PyCFunction)__pyx_pw_6moaipy_11AKUSetContext, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_11AKUSetContext(PyObject *__pyx_self, PyObject *__pyx_v_context) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_10AKUSetContext(__pyx_self, ((PyObject *)__pyx_v_context));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":18
 *     cmoai.AKUFinalize()
 * 
 * def AKUSetContext(context):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetContext(context)
 * 
 */

static PyObject *__pyx_pf_6moaipy_10AKUSetContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_context) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  AKUContextID __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetContext", 0);

  /* "moaipy.pyx":19
 * 
 * def AKUSetContext(context):
 *     cmoai.AKUSetContext(context)             # <<<<<<<<<<<<<<
 * 
 * def AKUGetLuaState():
 */
  __pyx_t_1 = __Pyx_PyInt_from_py_AKUContextID(__pyx_v_context); if (unlikely((__pyx_t_1 == (AKUContextID)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetContext(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_13AKUGetLuaState(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_13AKUGetLuaState = {__Pyx_NAMESTR("AKUGetLuaState"), (PyCFunction)__pyx_pw_6moaipy_13AKUGetLuaState, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_13AKUGetLuaState(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUGetLuaState (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_12AKUGetLuaState(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":21
 *     cmoai.AKUSetContext(context)
 * 
 * def AKUGetLuaState():             # <<<<<<<<<<<<<<
 *     cdef long pointer = <long> cmoai.AKUGetLuaState()
 *     return pointer
 */

static PyObject *__pyx_pf_6moaipy_12AKUGetLuaState(CYTHON_UNUSED PyObject *__pyx_self) {
  long __pyx_v_pointer;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUGetLuaState", 0);

  /* "moaipy.pyx":22
 * 
 * def AKUGetLuaState():
 *     cdef long pointer = <long> cmoai.AKUGetLuaState()             # <<<<<<<<<<<<<<
 *     return pointer
 * 
 */
  __pyx_v_pointer = ((long)AKUGetLuaState());

  /* "moaipy.pyx":23
 * def AKUGetLuaState():
 *     cdef long pointer = <long> cmoai.AKUGetLuaState()
 *     return pointer             # <<<<<<<<<<<<<<
 * 
 * # char*           AKUGetMoaiVersion               ( char* buffer, size_t length )
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_pointer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("moaipy.AKUGetLuaState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_15AKURunScript(PyObject *__pyx_self, PyObject *__pyx_v_filename); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_15AKURunScript = {__Pyx_NAMESTR("AKURunScript"), (PyCFunction)__pyx_pw_6moaipy_15AKURunScript, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_15AKURunScript(PyObject *__pyx_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKURunScript (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_14AKURunScript(__pyx_self, ((PyObject *)__pyx_v_filename));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":29
 * # int             AKUMountVirtualDirectory        ( char* virtualPath, char* archive )
 * 
 * def AKURunScript(filename):             # <<<<<<<<<<<<<<
 *     cmoai.AKURunScript(filename)
 * 
 */

static PyObject *__pyx_pf_6moaipy_14AKURunScript(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKURunScript", 0);

  /* "moaipy.pyx":30
 * 
 * def AKURunScript(filename):
 *     cmoai.AKURunScript(filename)             # <<<<<<<<<<<<<<
 * 
 * def AKURunString(script):
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_filename); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKURunScript(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKURunScript", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_17AKURunString(PyObject *__pyx_self, PyObject *__pyx_v_script); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_17AKURunString = {__Pyx_NAMESTR("AKURunString"), (PyCFunction)__pyx_pw_6moaipy_17AKURunString, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_17AKURunString(PyObject *__pyx_self, PyObject *__pyx_v_script) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKURunString (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_16AKURunString(__pyx_self, ((PyObject *)__pyx_v_script));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":32
 *     cmoai.AKURunScript(filename)
 * 
 * def AKURunString(script):             # <<<<<<<<<<<<<<
 *     cmoai.AKURunString(script)
 * 
 */

static PyObject *__pyx_pf_6moaipy_16AKURunString(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_script) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKURunString", 0);

  /* "moaipy.pyx":33
 * 
 * def AKURunString(script):
 *     cmoai.AKURunString(script)             # <<<<<<<<<<<<<<
 * 
 * # def AKUSetArgv(argv):
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_script); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKURunString(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKURunString", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_19AKUFinalizeSim(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_19AKUFinalizeSim = {__Pyx_NAMESTR("AKUFinalizeSim"), (PyCFunction)__pyx_pw_6moaipy_19AKUFinalizeSim, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_19AKUFinalizeSim(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUFinalizeSim (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_18AKUFinalizeSim(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":45
 * 
 * # setup
 * def AKUFinalizeSim():             # <<<<<<<<<<<<<<
 *     cmoai.AKUFinalizeSim()
 * 
 */

static PyObject *__pyx_pf_6moaipy_18AKUFinalizeSim(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUFinalizeSim", 0);

  /* "moaipy.pyx":46
 * # setup
 * def AKUFinalizeSim():
 *     cmoai.AKUFinalizeSim()             # <<<<<<<<<<<<<<
 * 
 * def AKUInitializeSim():
 */
  AKUFinalizeSim();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_21AKUInitializeSim(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_21AKUInitializeSim = {__Pyx_NAMESTR("AKUInitializeSim"), (PyCFunction)__pyx_pw_6moaipy_21AKUInitializeSim, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_21AKUInitializeSim(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUInitializeSim (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_20AKUInitializeSim(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":48
 *     cmoai.AKUFinalizeSim()
 * 
 * def AKUInitializeSim():             # <<<<<<<<<<<<<<
 *     cmoai.AKUInitializeSim()
 * 
 */

static PyObject *__pyx_pf_6moaipy_20AKUInitializeSim(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUInitializeSim", 0);

  /* "moaipy.pyx":49
 * 
 * def AKUInitializeSim():
 *     cmoai.AKUInitializeSim()             # <<<<<<<<<<<<<<
 * 
 * # management api
 */
  AKUInitializeSim();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_23AKUDetectGfxContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_23AKUDetectGfxContext = {__Pyx_NAMESTR("AKUDetectGfxContext"), (PyCFunction)__pyx_pw_6moaipy_23AKUDetectGfxContext, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_23AKUDetectGfxContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUDetectGfxContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_22AKUDetectGfxContext(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":52
 * 
 * # management api
 * def AKUDetectGfxContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUDetectGfxContext()
 * 
 */

static PyObject *__pyx_pf_6moaipy_22AKUDetectGfxContext(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUDetectGfxContext", 0);

  /* "moaipy.pyx":53
 * # management api
 * def AKUDetectGfxContext():
 *     cmoai.AKUDetectGfxContext()             # <<<<<<<<<<<<<<
 * 
 * def AKUGetSimStep():
 */
  AKUDetectGfxContext();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_25AKUGetSimStep(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_25AKUGetSimStep = {__Pyx_NAMESTR("AKUGetSimStep"), (PyCFunction)__pyx_pw_6moaipy_25AKUGetSimStep, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_25AKUGetSimStep(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUGetSimStep (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_24AKUGetSimStep(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":55
 *     cmoai.AKUDetectGfxContext()
 * 
 * def AKUGetSimStep():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUGetSimStep()
 * 
 */

static PyObject *__pyx_pf_6moaipy_24AKUGetSimStep(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUGetSimStep", 0);

  /* "moaipy.pyx":56
 * 
 * def AKUGetSimStep():
 *     return cmoai.AKUGetSimStep()             # <<<<<<<<<<<<<<
 * 
 * def AKUPause(pause):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(AKUGetSimStep()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("moaipy.AKUGetSimStep", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_27AKUPause(PyObject *__pyx_self, PyObject *__pyx_v_pause); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_27AKUPause = {__Pyx_NAMESTR("AKUPause"), (PyCFunction)__pyx_pw_6moaipy_27AKUPause, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_27AKUPause(PyObject *__pyx_self, PyObject *__pyx_v_pause) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUPause (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_26AKUPause(__pyx_self, ((PyObject *)__pyx_v_pause));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":58
 *     return cmoai.AKUGetSimStep()
 * 
 * def AKUPause(pause):             # <<<<<<<<<<<<<<
 *     cmoai.AKUPause(pause)
 * 
 */

static PyObject *__pyx_pf_6moaipy_26AKUPause(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_pause) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUPause", 0);

  /* "moaipy.pyx":59
 * 
 * def AKUPause(pause):
 *     cmoai.AKUPause(pause)             # <<<<<<<<<<<<<<
 * 
 * def AKUReleaseGfxContext():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_pause); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUPause(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUPause", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_29AKUReleaseGfxContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_29AKUReleaseGfxContext = {__Pyx_NAMESTR("AKUReleaseGfxContext"), (PyCFunction)__pyx_pw_6moaipy_29AKUReleaseGfxContext, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_29AKUReleaseGfxContext(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUReleaseGfxContext (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_28AKUReleaseGfxContext(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":61
 *     cmoai.AKUPause(pause)
 * 
 * def AKUReleaseGfxContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUReleaseGfxContext()
 * 
 */

static PyObject *__pyx_pf_6moaipy_28AKUReleaseGfxContext(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUReleaseGfxContext", 0);

  /* "moaipy.pyx":62
 * 
 * def AKUReleaseGfxContext():
 *     cmoai.AKUReleaseGfxContext()             # <<<<<<<<<<<<<<
 * 
 * def AKURender():
 */
  AKUReleaseGfxContext();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_31AKURender(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_31AKURender = {__Pyx_NAMESTR("AKURender"), (PyCFunction)__pyx_pw_6moaipy_31AKURender, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_31AKURender(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKURender (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_30AKURender(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":64
 *     cmoai.AKUReleaseGfxContext()
 * 
 * def AKURender():             # <<<<<<<<<<<<<<
 *     cmoai.AKURender()
 * 
 */

static PyObject *__pyx_pf_6moaipy_30AKURender(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKURender", 0);

  /* "moaipy.pyx":65
 * 
 * def AKURender():
 *     cmoai.AKURender()             # <<<<<<<<<<<<<<
 * 
 * def AKUSetOrientation(orientation):
 */
  AKURender();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_33AKUSetOrientation(PyObject *__pyx_self, PyObject *__pyx_v_orientation); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_33AKUSetOrientation = {__Pyx_NAMESTR("AKUSetOrientation"), (PyCFunction)__pyx_pw_6moaipy_33AKUSetOrientation, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_33AKUSetOrientation(PyObject *__pyx_self, PyObject *__pyx_v_orientation) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetOrientation (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_32AKUSetOrientation(__pyx_self, ((PyObject *)__pyx_v_orientation));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":67
 *     cmoai.AKURender()
 * 
 * def AKUSetOrientation(orientation):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetOrientation(orientation)
 * 
 */

static PyObject *__pyx_pf_6moaipy_32AKUSetOrientation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_orientation) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetOrientation", 0);

  /* "moaipy.pyx":68
 * 
 * def AKUSetOrientation(orientation):
 *     cmoai.AKUSetOrientation(orientation)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetScreenDpi(dpi):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_orientation); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetOrientation(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetOrientation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_35AKUSetScreenDpi(PyObject *__pyx_self, PyObject *__pyx_v_dpi); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_35AKUSetScreenDpi = {__Pyx_NAMESTR("AKUSetScreenDpi"), (PyCFunction)__pyx_pw_6moaipy_35AKUSetScreenDpi, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_35AKUSetScreenDpi(PyObject *__pyx_self, PyObject *__pyx_v_dpi) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetScreenDpi (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_34AKUSetScreenDpi(__pyx_self, ((PyObject *)__pyx_v_dpi));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":70
 *     cmoai.AKUSetOrientation(orientation)
 * 
 * def AKUSetScreenDpi(dpi):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetScreenDpi(dpi)
 * 
 */

static PyObject *__pyx_pf_6moaipy_34AKUSetScreenDpi(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dpi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetScreenDpi", 0);

  /* "moaipy.pyx":71
 * 
 * def AKUSetScreenDpi(dpi):
 *     cmoai.AKUSetScreenDpi(dpi)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetScreenSize(width, height):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_dpi); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetScreenDpi(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetScreenDpi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_37AKUSetScreenSize(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_37AKUSetScreenSize = {__Pyx_NAMESTR("AKUSetScreenSize"), (PyCFunction)__pyx_pw_6moaipy_37AKUSetScreenSize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_37AKUSetScreenSize(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_width = 0;
  PyObject *__pyx_v_height = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetScreenSize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetScreenSize", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetScreenSize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_width = values[0];
    __pyx_v_height = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetScreenSize", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetScreenSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_36AKUSetScreenSize(__pyx_self, __pyx_v_width, __pyx_v_height);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":73
 *     cmoai.AKUSetScreenDpi(dpi)
 * 
 * def AKUSetScreenSize(width, height):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetScreenSize(width, height)
 * 
 */

static PyObject *__pyx_pf_6moaipy_36AKUSetScreenSize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_width, PyObject *__pyx_v_height) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetScreenSize", 0);

  /* "moaipy.pyx":74
 * 
 * def AKUSetScreenSize(width, height):
 *     cmoai.AKUSetScreenSize(width, height)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetViewSize(width, height):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_width); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_height); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetScreenSize(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetScreenSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_39AKUSetViewSize(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_39AKUSetViewSize = {__Pyx_NAMESTR("AKUSetViewSize"), (PyCFunction)__pyx_pw_6moaipy_39AKUSetViewSize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_39AKUSetViewSize(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_width = 0;
  PyObject *__pyx_v_height = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetViewSize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetViewSize", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetViewSize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_width = values[0];
    __pyx_v_height = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetViewSize", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetViewSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_38AKUSetViewSize(__pyx_self, __pyx_v_width, __pyx_v_height);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":76
 *     cmoai.AKUSetScreenSize(width, height)
 * 
 * def AKUSetViewSize(width, height):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetViewSize(width, height)
 * 
 */

static PyObject *__pyx_pf_6moaipy_38AKUSetViewSize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_width, PyObject *__pyx_v_height) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetViewSize", 0);

  /* "moaipy.pyx":77
 * 
 * def AKUSetViewSize(width, height):
 *     cmoai.AKUSetViewSize(width, height)             # <<<<<<<<<<<<<<
 * 
 * def AKUSoftReleaseGfxResources(age):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_width); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_height); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetViewSize(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetViewSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_41AKUSoftReleaseGfxResources(PyObject *__pyx_self, PyObject *__pyx_v_age); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_41AKUSoftReleaseGfxResources = {__Pyx_NAMESTR("AKUSoftReleaseGfxResources"), (PyCFunction)__pyx_pw_6moaipy_41AKUSoftReleaseGfxResources, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_41AKUSoftReleaseGfxResources(PyObject *__pyx_self, PyObject *__pyx_v_age) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSoftReleaseGfxResources (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_40AKUSoftReleaseGfxResources(__pyx_self, ((PyObject *)__pyx_v_age));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":79
 *     cmoai.AKUSetViewSize(width, height)
 * 
 * def AKUSoftReleaseGfxResources(age):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSoftReleaseGfxResources(age)
 * 
 */

static PyObject *__pyx_pf_6moaipy_40AKUSoftReleaseGfxResources(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_age) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSoftReleaseGfxResources", 0);

  /* "moaipy.pyx":80
 * 
 * def AKUSoftReleaseGfxResources(age):
 *     cmoai.AKUSoftReleaseGfxResources(age)             # <<<<<<<<<<<<<<
 * 
 * def AKUUpdate():
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_age); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSoftReleaseGfxResources(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSoftReleaseGfxResources", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_43AKUUpdate(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_43AKUUpdate = {__Pyx_NAMESTR("AKUUpdate"), (PyCFunction)__pyx_pw_6moaipy_43AKUUpdate, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_43AKUUpdate(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUUpdate (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_42AKUUpdate(__pyx_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":82
 *     cmoai.AKUSoftReleaseGfxResources(age)
 * 
 * def AKUUpdate():             # <<<<<<<<<<<<<<
 *     cmoai.AKUUpdate()
 * 
 */

static PyObject *__pyx_pf_6moaipy_42AKUUpdate(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUUpdate", 0);

  /* "moaipy.pyx":83
 * 
 * def AKUUpdate():
 *     cmoai.AKUUpdate()             # <<<<<<<<<<<<<<
 * 
 * # callback management
 */
  AKUUpdate();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_45AKUReserveInputDevices(PyObject *__pyx_self, PyObject *__pyx_v_total); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_45AKUReserveInputDevices = {__Pyx_NAMESTR("AKUReserveInputDevices"), (PyCFunction)__pyx_pw_6moaipy_45AKUReserveInputDevices, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_45AKUReserveInputDevices(PyObject *__pyx_self, PyObject *__pyx_v_total) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUReserveInputDevices (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_44AKUReserveInputDevices(__pyx_self, ((PyObject *)__pyx_v_total));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":92
 * 
 * # # input device api
 * def AKUReserveInputDevices(total):             # <<<<<<<<<<<<<<
 *     cmoai.AKUReserveInputDevices(total)
 * 
 */

static PyObject *__pyx_pf_6moaipy_44AKUReserveInputDevices(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_total) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUReserveInputDevices", 0);

  /* "moaipy.pyx":93
 * # # input device api
 * def AKUReserveInputDevices(total):
 *     cmoai.AKUReserveInputDevices(total)             # <<<<<<<<<<<<<<
 * 
 * def AKUReserveInputDeviceSensors(deviceID, total):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_total); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUReserveInputDevices(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUReserveInputDevices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_47AKUReserveInputDeviceSensors(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_47AKUReserveInputDeviceSensors = {__Pyx_NAMESTR("AKUReserveInputDeviceSensors"), (PyCFunction)__pyx_pw_6moaipy_47AKUReserveInputDeviceSensors, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_47AKUReserveInputDeviceSensors(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_total = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUReserveInputDeviceSensors (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__total,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__total)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUReserveInputDeviceSensors", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUReserveInputDeviceSensors") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_total = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUReserveInputDeviceSensors", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUReserveInputDeviceSensors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_46AKUReserveInputDeviceSensors(__pyx_self, __pyx_v_deviceID, __pyx_v_total);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":95
 *     cmoai.AKUReserveInputDevices(total)
 * 
 * def AKUReserveInputDeviceSensors(deviceID, total):             # <<<<<<<<<<<<<<
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)
 * 
 */

static PyObject *__pyx_pf_6moaipy_46AKUReserveInputDeviceSensors(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_total) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUReserveInputDeviceSensors", 0);

  /* "moaipy.pyx":96
 * 
 * def AKUReserveInputDeviceSensors(deviceID, total):
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputConfigurationName(name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_total); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUReserveInputDeviceSensors(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUReserveInputDeviceSensors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_49AKUSetInputConfigurationName(PyObject *__pyx_self, PyObject *__pyx_v_name); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_49AKUSetInputConfigurationName = {__Pyx_NAMESTR("AKUSetInputConfigurationName"), (PyCFunction)__pyx_pw_6moaipy_49AKUSetInputConfigurationName, METH_O, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_49AKUSetInputConfigurationName(PyObject *__pyx_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputConfigurationName (wrapper)", 0);
  __pyx_r = __pyx_pf_6moaipy_48AKUSetInputConfigurationName(__pyx_self, ((PyObject *)__pyx_v_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":98
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)
 * 
 * def AKUSetInputConfigurationName(name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputConfigurationName(name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_48AKUSetInputConfigurationName(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputConfigurationName", 0);

  /* "moaipy.pyx":99
 * 
 * def AKUSetInputConfigurationName(name):
 *     cmoai.AKUSetInputConfigurationName(name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDevice(deviceID, name):
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputConfigurationName(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputConfigurationName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_51AKUSetInputDevice(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_51AKUSetInputDevice = {__Pyx_NAMESTR("AKUSetInputDevice"), (PyCFunction)__pyx_pw_6moaipy_51AKUSetInputDevice, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_51AKUSetInputDevice(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDevice (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__name,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDevice", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDevice") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDevice", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_50AKUSetInputDevice(__pyx_self, __pyx_v_deviceID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":101
 *     cmoai.AKUSetInputConfigurationName(name)
 * 
 * def AKUSetInputDevice(deviceID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDevice(deviceID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_50AKUSetInputDevice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  char *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDevice", 0);

  /* "moaipy.pyx":102
 * 
 * def AKUSetInputDevice(deviceID, name):
 *     cmoai.AKUSetInputDevice(deviceID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceActive(deviceID, active):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDevice(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_53AKUSetInputDeviceActive(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_53AKUSetInputDeviceActive = {__Pyx_NAMESTR("AKUSetInputDeviceActive"), (PyCFunction)__pyx_pw_6moaipy_53AKUSetInputDeviceActive, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_53AKUSetInputDeviceActive(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_active = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceActive (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__active,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__active)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceActive", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceActive") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_active = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceActive", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceActive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_52AKUSetInputDeviceActive(__pyx_self, __pyx_v_deviceID, __pyx_v_active);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":104
 *     cmoai.AKUSetInputDevice(deviceID, name)
 * 
 * def AKUSetInputDeviceActive(deviceID, active):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)
 * 
 */

static PyObject *__pyx_pf_6moaipy_52AKUSetInputDeviceActive(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_active) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceActive", 0);

  /* "moaipy.pyx":105
 * 
 * def AKUSetInputDeviceActive(deviceID, active):
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceButton(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_active); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceActive(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceActive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_55AKUSetInputDeviceButton(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_55AKUSetInputDeviceButton = {__Pyx_NAMESTR("AKUSetInputDeviceButton"), (PyCFunction)__pyx_pw_6moaipy_55AKUSetInputDeviceButton, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_55AKUSetInputDeviceButton(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceButton (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceButton", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceButton", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceButton") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceButton", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceButton", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_54AKUSetInputDeviceButton(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":107
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)
 * 
 * def AKUSetInputDeviceButton(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_54AKUSetInputDeviceButton(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceButton", 0);

  /* "moaipy.pyx":108
 * 
 * def AKUSetInputDeviceButton(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceCompass(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceButton(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceButton", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_57AKUSetInputDeviceCompass(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_57AKUSetInputDeviceCompass = {__Pyx_NAMESTR("AKUSetInputDeviceCompass"), (PyCFunction)__pyx_pw_6moaipy_57AKUSetInputDeviceCompass, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_57AKUSetInputDeviceCompass(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceCompass (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceCompass", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceCompass", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceCompass") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceCompass", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceCompass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_56AKUSetInputDeviceCompass(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":110
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceCompass(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_56AKUSetInputDeviceCompass(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceCompass", 0);

  /* "moaipy.pyx":111
 * 
 * def AKUSetInputDeviceCompass(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceKeyboard(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceCompass(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceCompass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_59AKUSetInputDeviceKeyboard(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_59AKUSetInputDeviceKeyboard = {__Pyx_NAMESTR("AKUSetInputDeviceKeyboard"), (PyCFunction)__pyx_pw_6moaipy_59AKUSetInputDeviceKeyboard, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_59AKUSetInputDeviceKeyboard(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceKeyboard (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceKeyboard", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceKeyboard", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceKeyboard") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceKeyboard", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceKeyboard", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_58AKUSetInputDeviceKeyboard(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":113
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceKeyboard(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_58AKUSetInputDeviceKeyboard(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceKeyboard", 0);

  /* "moaipy.pyx":114
 * 
 * def AKUSetInputDeviceKeyboard(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceLevel(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceKeyboard(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceKeyboard", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_61AKUSetInputDeviceLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_61AKUSetInputDeviceLevel = {__Pyx_NAMESTR("AKUSetInputDeviceLevel"), (PyCFunction)__pyx_pw_6moaipy_61AKUSetInputDeviceLevel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_61AKUSetInputDeviceLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceLevel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceLevel", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceLevel", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceLevel") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceLevel", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_60AKUSetInputDeviceLevel(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":116
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceLevel(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_60AKUSetInputDeviceLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceLevel", 0);

  /* "moaipy.pyx":117
 * 
 * def AKUSetInputDeviceLevel(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceLocation(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceLevel(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_63AKUSetInputDeviceLocation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_63AKUSetInputDeviceLocation = {__Pyx_NAMESTR("AKUSetInputDeviceLocation"), (PyCFunction)__pyx_pw_6moaipy_63AKUSetInputDeviceLocation, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_63AKUSetInputDeviceLocation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceLocation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceLocation", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceLocation", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceLocation") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceLocation", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceLocation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_62AKUSetInputDeviceLocation(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":119
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceLocation(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_62AKUSetInputDeviceLocation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceLocation", 0);

  /* "moaipy.pyx":120
 * 
 * def AKUSetInputDeviceLocation(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDevicePointer(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceLocation(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceLocation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_65AKUSetInputDevicePointer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_65AKUSetInputDevicePointer = {__Pyx_NAMESTR("AKUSetInputDevicePointer"), (PyCFunction)__pyx_pw_6moaipy_65AKUSetInputDevicePointer, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_65AKUSetInputDevicePointer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDevicePointer (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDevicePointer", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDevicePointer", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDevicePointer") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDevicePointer", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDevicePointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_64AKUSetInputDevicePointer(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":122
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)
 * 
 * def AKUSetInputDevicePointer(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_64AKUSetInputDevicePointer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDevicePointer", 0);

  /* "moaipy.pyx":123
 * 
 * def AKUSetInputDevicePointer(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceTouch(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDevicePointer(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDevicePointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_67AKUSetInputDeviceTouch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_67AKUSetInputDeviceTouch = {__Pyx_NAMESTR("AKUSetInputDeviceTouch"), (PyCFunction)__pyx_pw_6moaipy_67AKUSetInputDeviceTouch, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_67AKUSetInputDeviceTouch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceTouch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceTouch", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceTouch", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceTouch") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceTouch", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceTouch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_66AKUSetInputDeviceTouch(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":125
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceTouch(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_66AKUSetInputDeviceTouch(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceTouch", 0);

  /* "moaipy.pyx":126
 * 
 * def AKUSetInputDeviceTouch(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * def AKUSetInputDeviceWheel(deviceID, sensorID, name):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceTouch(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceTouch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_69AKUSetInputDeviceWheel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_69AKUSetInputDeviceWheel = {__Pyx_NAMESTR("AKUSetInputDeviceWheel"), (PyCFunction)__pyx_pw_6moaipy_69AKUSetInputDeviceWheel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_69AKUSetInputDeviceWheel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUSetInputDeviceWheel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__name,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceWheel", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceWheel", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUSetInputDeviceWheel") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUSetInputDeviceWheel", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceWheel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_68AKUSetInputDeviceWheel(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_name);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":128
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceWheel(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceWheel(deviceID, sensorID, name)
 * 
 */

static PyObject *__pyx_pf_6moaipy_68AKUSetInputDeviceWheel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUSetInputDeviceWheel", 0);

  /* "moaipy.pyx":129
 * 
 * def AKUSetInputDeviceWheel(deviceID, sensorID, name):
 *     cmoai.AKUSetInputDeviceWheel(deviceID, sensorID, name)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_AsString(__pyx_v_name); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUSetInputDeviceWheel(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUSetInputDeviceWheel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_71AKUEnqueueButtonEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_71AKUEnqueueButtonEvent = {__Pyx_NAMESTR("AKUEnqueueButtonEvent"), (PyCFunction)__pyx_pw_6moaipy_71AKUEnqueueButtonEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_71AKUEnqueueButtonEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueButtonEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueButtonEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueButtonEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueButtonEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueButtonEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueButtonEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_70AKUEnqueueButtonEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":133
 * 
 * # # input events api
 * def AKUEnqueueButtonEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_6moaipy_70AKUEnqueueButtonEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueButtonEvent", 0);

  /* "moaipy.pyx":134
 * # # input events api
 * def AKUEnqueueButtonEvent(deviceID, sensorID, down):
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueCompassEvent(deviceID, sensorID, heading):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueButtonEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueButtonEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_73AKUEnqueueCompassEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_73AKUEnqueueCompassEvent = {__Pyx_NAMESTR("AKUEnqueueCompassEvent"), (PyCFunction)__pyx_pw_6moaipy_73AKUEnqueueCompassEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_73AKUEnqueueCompassEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_heading = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueCompassEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__heading,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueCompassEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__heading)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueCompassEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueCompassEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_heading = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueCompassEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueCompassEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_72AKUEnqueueCompassEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_heading);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":136
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueCompassEvent(deviceID, sensorID, heading):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 */

static PyObject *__pyx_pf_6moaipy_72AKUEnqueueCompassEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_heading) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  float __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueCompassEvent", 0);

  /* "moaipy.pyx":137
 * 
 * def AKUEnqueueCompassEvent(deviceID, sensorID, heading):
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_v_heading); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueCompassEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueCompassEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_75AKUEnqueueKeyboardAltEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_75AKUEnqueueKeyboardAltEvent = {__Pyx_NAMESTR("AKUEnqueueKeyboardAltEvent"), (PyCFunction)__pyx_pw_6moaipy_75AKUEnqueueKeyboardAltEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_75AKUEnqueueKeyboardAltEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardAltEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardAltEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardAltEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueKeyboardAltEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardAltEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardAltEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_74AKUEnqueueKeyboardAltEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":139
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 * def AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_6moaipy_74AKUEnqueueKeyboardAltEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardAltEvent", 0);

  /* "moaipy.pyx":140
 * 
 * def AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down):
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardAltEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardAltEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_77AKUEnqueueKeyboardControlEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_77AKUEnqueueKeyboardControlEvent = {__Pyx_NAMESTR("AKUEnqueueKeyboardControlEvent"), (PyCFunction)__pyx_pw_6moaipy_77AKUEnqueueKeyboardControlEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_77AKUEnqueueKeyboardControlEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardControlEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardControlEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardControlEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueKeyboardControlEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardControlEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardControlEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_76AKUEnqueueKeyboardControlEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":142
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_6moaipy_76AKUEnqueueKeyboardControlEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardControlEvent", 0);

  /* "moaipy.pyx":143
 * 
 * def AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down):
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardControlEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardControlEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_79AKUEnqueueKeyboardEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_79AKUEnqueueKeyboardEvent = {__Pyx_NAMESTR("AKUEnqueueKeyboardEvent"), (PyCFunction)__pyx_pw_6moaipy_79AKUEnqueueKeyboardEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_79AKUEnqueueKeyboardEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_keyID = 0;
  PyObject *__pyx_v_down = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__keyID,&__pyx_n_s__down,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardEvent", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__keyID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardEvent", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardEvent", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueKeyboardEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_keyID = values[2];
    __pyx_v_down = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardEvent", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_78AKUEnqueueKeyboardEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_keyID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":145
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 */

static PyObject *__pyx_pf_6moaipy_78AKUEnqueueKeyboardEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_keyID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardEvent", 0);

  /* "moaipy.pyx":146
 * 
 * def AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down):
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_keyID); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_81AKUEnqueueKeyboardShiftEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_81AKUEnqueueKeyboardShiftEvent = {__Pyx_NAMESTR("AKUEnqueueKeyboardShiftEvent"), (PyCFunction)__pyx_pw_6moaipy_81AKUEnqueueKeyboardShiftEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_81AKUEnqueueKeyboardShiftEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_down = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardShiftEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__down,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardShiftEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardShiftEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueKeyboardShiftEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_down = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueKeyboardShiftEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardShiftEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_80AKUEnqueueKeyboardShiftEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_down);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":148
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 * def AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 */

static PyObject *__pyx_pf_6moaipy_80AKUEnqueueKeyboardShiftEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_down) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueKeyboardShiftEvent", 0);

  /* "moaipy.pyx":149
 * 
 * def AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down):
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueKeyboardShiftEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueKeyboardShiftEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_83AKUEnqueueLevelEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_83AKUEnqueueLevelEvent = {__Pyx_NAMESTR("AKUEnqueueLevelEvent"), (PyCFunction)__pyx_pw_6moaipy_83AKUEnqueueLevelEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_83AKUEnqueueLevelEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueLevelEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLevelEvent", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLevelEvent", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLevelEvent", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLevelEvent", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueLevelEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_x = values[2];
    __pyx_v_y = values[3];
    __pyx_v_z = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueLevelEvent", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueLevelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_82AKUEnqueueLevelEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_x, __pyx_v_y, __pyx_v_z);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":151
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 */

static PyObject *__pyx_pf_6moaipy_82AKUEnqueueLevelEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  float __pyx_t_3;
  float __pyx_t_4;
  float __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueLevelEvent", 0);

  /* "moaipy.pyx":152
 * 
 * def AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z):
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_v_x); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_PyFloat_AsFloat(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_z); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueLevelEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueLevelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_85AKUEnqueueLocationEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_85AKUEnqueueLocationEvent = {__Pyx_NAMESTR("AKUEnqueueLocationEvent"), (PyCFunction)__pyx_pw_6moaipy_85AKUEnqueueLocationEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_85AKUEnqueueLocationEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_longitude = 0;
  PyObject *__pyx_v_latitude = 0;
  PyObject *__pyx_v_altitude = 0;
  PyObject *__pyx_v_hAccuracy = 0;
  PyObject *__pyx_v_vAccuracy = 0;
  PyObject *__pyx_v_speed = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueLocationEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__longitude,&__pyx_n_s__latitude,&__pyx_n_s__altitude,&__pyx_n_s__hAccuracy,&__pyx_n_s__vAccuracy,&__pyx_n_s__speed,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__longitude)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__latitude)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__altitude)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__hAccuracy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__vAccuracy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__speed)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueLocationEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_longitude = values[2];
    __pyx_v_latitude = values[3];
    __pyx_v_altitude = values[4];
    __pyx_v_hAccuracy = values[5];
    __pyx_v_vAccuracy = values[6];
    __pyx_v_speed = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueLocationEvent", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueLocationEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_84AKUEnqueueLocationEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_longitude, __pyx_v_latitude, __pyx_v_altitude, __pyx_v_hAccuracy, __pyx_v_vAccuracy, __pyx_v_speed);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":154
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 * def AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)
 * 
 */

static PyObject *__pyx_pf_6moaipy_84AKUEnqueueLocationEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_longitude, PyObject *__pyx_v_latitude, PyObject *__pyx_v_altitude, PyObject *__pyx_v_hAccuracy, PyObject *__pyx_v_vAccuracy, PyObject *__pyx_v_speed) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  double __pyx_t_5;
  float __pyx_t_6;
  float __pyx_t_7;
  float __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueLocationEvent", 0);

  /* "moaipy.pyx":155
 * 
 * def AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed):
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueuePointerEvent(deviceID, sensorID, x, y):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_longitude); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_latitude); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_altitude); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __pyx_PyFloat_AsFloat(__pyx_v_hAccuracy); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __pyx_PyFloat_AsFloat(__pyx_v_vAccuracy); if (unlikely((__pyx_t_7 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_8 = __pyx_PyFloat_AsFloat(__pyx_v_speed); if (unlikely((__pyx_t_8 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueLocationEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueLocationEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_87AKUEnqueuePointerEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_87AKUEnqueuePointerEvent = {__Pyx_NAMESTR("AKUEnqueuePointerEvent"), (PyCFunction)__pyx_pw_6moaipy_87AKUEnqueuePointerEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_87AKUEnqueuePointerEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueuePointerEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__x,&__pyx_n_s__y,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueuePointerEvent", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueuePointerEvent", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueuePointerEvent", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueuePointerEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_x = values[2];
    __pyx_v_y = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueuePointerEvent", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueuePointerEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_86AKUEnqueuePointerEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_x, __pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":157
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)
 * 
 * def AKUEnqueuePointerEvent(deviceID, sensorID, x, y):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 */

static PyObject *__pyx_pf_6moaipy_86AKUEnqueuePointerEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueuePointerEvent", 0);

  /* "moaipy.pyx":158
 * 
 * def AKUEnqueuePointerEvent(deviceID, sensorID, x, y):
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_x); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_y); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueuePointerEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueuePointerEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_89AKUEnqueueTouchEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_89AKUEnqueueTouchEvent = {__Pyx_NAMESTR("AKUEnqueueTouchEvent"), (PyCFunction)__pyx_pw_6moaipy_89AKUEnqueueTouchEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_89AKUEnqueueTouchEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_touchID = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueTouchEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__touchID,&__pyx_n_s__down,&__pyx_n_s__x,&__pyx_n_s__y,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEvent", 1, 6, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__touchID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEvent", 1, 6, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEvent", 1, 6, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEvent", 1, 6, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEvent", 1, 6, 6, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueTouchEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_touchID = values[2];
    __pyx_v_down = values[3];
    __pyx_v_x = values[4];
    __pyx_v_y = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEvent", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueTouchEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_88AKUEnqueueTouchEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_touchID, __pyx_v_down, __pyx_v_x, __pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":160
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 * def AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 */

static PyObject *__pyx_pf_6moaipy_88AKUEnqueueTouchEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_touchID, PyObject *__pyx_v_down, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  float __pyx_t_5;
  float __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueTouchEvent", 0);

  /* "moaipy.pyx":161
 * 
 * def AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y):
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueTouchEventCancel(deviceID, sensorID):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_touchID); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_down); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_x); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __pyx_PyFloat_AsFloat(__pyx_v_y); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueTouchEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueTouchEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_91AKUEnqueueTouchEventCancel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_91AKUEnqueueTouchEventCancel = {__Pyx_NAMESTR("AKUEnqueueTouchEventCancel"), (PyCFunction)__pyx_pw_6moaipy_91AKUEnqueueTouchEventCancel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_91AKUEnqueueTouchEventCancel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueTouchEventCancel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEventCancel", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueTouchEventCancel") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueTouchEventCancel", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueTouchEventCancel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_90AKUEnqueueTouchEventCancel(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":163
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 * def AKUEnqueueTouchEventCancel(deviceID, sensorID):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 */

static PyObject *__pyx_pf_6moaipy_90AKUEnqueueTouchEventCancel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueTouchEventCancel", 0);

  /* "moaipy.pyx":164
 * 
 * def AKUEnqueueTouchEventCancel(deviceID, sensorID):
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)             # <<<<<<<<<<<<<<
 * 
 * def AKUEnqueueWheelEvent(deviceID, sensorID, value):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueTouchEventCancel(__pyx_t_1, __pyx_t_2);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueTouchEventCancel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_6moaipy_93AKUEnqueueWheelEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6moaipy_93AKUEnqueueWheelEvent = {__Pyx_NAMESTR("AKUEnqueueWheelEvent"), (PyCFunction)__pyx_pw_6moaipy_93AKUEnqueueWheelEvent, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_6moaipy_93AKUEnqueueWheelEvent(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_deviceID = 0;
  PyObject *__pyx_v_sensorID = 0;
  PyObject *__pyx_v_value = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AKUEnqueueWheelEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__deviceID,&__pyx_n_s__sensorID,&__pyx_n_s__value,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__deviceID)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sensorID)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueWheelEvent", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AKUEnqueueWheelEvent", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AKUEnqueueWheelEvent") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deviceID = values[0];
    __pyx_v_sensorID = values[1];
    __pyx_v_value = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AKUEnqueueWheelEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueWheelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6moaipy_92AKUEnqueueWheelEvent(__pyx_self, __pyx_v_deviceID, __pyx_v_sensorID, __pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "moaipy.pyx":166
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 * def AKUEnqueueWheelEvent(deviceID, sensorID, value):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueWheelEvent(deviceID, sensorID, value)
 */

static PyObject *__pyx_pf_6moaipy_92AKUEnqueueWheelEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_deviceID, PyObject *__pyx_v_sensorID, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  float __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AKUEnqueueWheelEvent", 0);

  /* "moaipy.pyx":167
 * 
 * def AKUEnqueueWheelEvent(deviceID, sensorID, value):
 *     cmoai.AKUEnqueueWheelEvent(deviceID, sensorID, value)             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_deviceID); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_sensorID); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_v_value); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  AKUEnqueueWheelEvent(__pyx_t_1, __pyx_t_2, __pyx_t_3);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("moaipy.AKUEnqueueWheelEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    __Pyx_NAMESTR("moaipy"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_101, __pyx_k_101, sizeof(__pyx_k_101), 0, 0, 1, 1},
  {&__pyx_n_s_104, __pyx_k_104, sizeof(__pyx_k_104), 0, 0, 1, 1},
  {&__pyx_n_s_107, __pyx_k_107, sizeof(__pyx_k_107), 0, 0, 1, 1},
  {&__pyx_n_s_110, __pyx_k_110, sizeof(__pyx_k_110), 0, 0, 1, 1},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_n_s_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 1, 1},
  {&__pyx_n_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 1},
  {&__pyx_n_s_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 0, 1, 1},
  {&__pyx_n_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 1},
  {&__pyx_n_s_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 0, 1, 1},
  {&__pyx_n_s_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 0, 1, 1},
  {&__pyx_n_s_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 1, 1},
  {&__pyx_n_s_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 0, 1, 1},
  {&__pyx_n_s_59, __pyx_k_59, sizeof(__pyx_k_59), 0, 0, 1, 1},
  {&__pyx_n_s_62, __pyx_k_62, sizeof(__pyx_k_62), 0, 0, 1, 1},
  {&__pyx_n_s_65, __pyx_k_65, sizeof(__pyx_k_65), 0, 0, 1, 1},
  {&__pyx_n_s_68, __pyx_k_68, sizeof(__pyx_k_68), 0, 0, 1, 1},
  {&__pyx_n_s_71, __pyx_k_71, sizeof(__pyx_k_71), 0, 0, 1, 1},
  {&__pyx_n_s_74, __pyx_k_74, sizeof(__pyx_k_74), 0, 0, 1, 1},
  {&__pyx_n_s_77, __pyx_k_77, sizeof(__pyx_k_77), 0, 0, 1, 1},
  {&__pyx_n_s_80, __pyx_k_80, sizeof(__pyx_k_80), 0, 0, 1, 1},
  {&__pyx_n_s_83, __pyx_k_83, sizeof(__pyx_k_83), 0, 0, 1, 1},
  {&__pyx_n_s_86, __pyx_k_86, sizeof(__pyx_k_86), 0, 0, 1, 1},
  {&__pyx_n_s_89, __pyx_k_89, sizeof(__pyx_k_89), 0, 0, 1, 1},
  {&__pyx_n_s_92, __pyx_k_92, sizeof(__pyx_k_92), 0, 0, 1, 1},
  {&__pyx_n_s_95, __pyx_k_95, sizeof(__pyx_k_95), 0, 0, 1, 1},
  {&__pyx_n_s_98, __pyx_k_98, sizeof(__pyx_k_98), 0, 0, 1, 1},
  {&__pyx_n_s__AKUCreateContext, __pyx_k__AKUCreateContext, sizeof(__pyx_k__AKUCreateContext), 0, 0, 1, 1},
  {&__pyx_n_s__AKUDeleteContext, __pyx_k__AKUDeleteContext, sizeof(__pyx_k__AKUDeleteContext), 0, 0, 1, 1},
  {&__pyx_n_s__AKUDetectGfxContext, __pyx_k__AKUDetectGfxContext, sizeof(__pyx_k__AKUDetectGfxContext), 0, 0, 1, 1},
  {&__pyx_n_s__AKUFinalize, __pyx_k__AKUFinalize, sizeof(__pyx_k__AKUFinalize), 0, 0, 1, 1},
  {&__pyx_n_s__AKUFinalizeSim, __pyx_k__AKUFinalizeSim, sizeof(__pyx_k__AKUFinalizeSim), 0, 0, 1, 1},
  {&__pyx_n_s__AKUGetContext, __pyx_k__AKUGetContext, sizeof(__pyx_k__AKUGetContext), 0, 0, 1, 1},
  {&__pyx_n_s__AKUGetLuaState, __pyx_k__AKUGetLuaState, sizeof(__pyx_k__AKUGetLuaState), 0, 0, 1, 1},
  {&__pyx_n_s__AKUGetSimStep, __pyx_k__AKUGetSimStep, sizeof(__pyx_k__AKUGetSimStep), 0, 0, 1, 1},
  {&__pyx_n_s__AKUInitializeSim, __pyx_k__AKUInitializeSim, sizeof(__pyx_k__AKUInitializeSim), 0, 0, 1, 1},
  {&__pyx_n_s__AKUPause, __pyx_k__AKUPause, sizeof(__pyx_k__AKUPause), 0, 0, 1, 1},
  {&__pyx_n_s__AKURender, __pyx_k__AKURender, sizeof(__pyx_k__AKURender), 0, 0, 1, 1},
  {&__pyx_n_s__AKURunScript, __pyx_k__AKURunScript, sizeof(__pyx_k__AKURunScript), 0, 0, 1, 1},
  {&__pyx_n_s__AKURunString, __pyx_k__AKURunString, sizeof(__pyx_k__AKURunString), 0, 0, 1, 1},
  {&__pyx_n_s__AKUSetContext, __pyx_k__AKUSetContext, sizeof(__pyx_k__AKUSetContext), 0, 0, 1, 1},
  {&__pyx_n_s__AKUSetInputDevice, __pyx_k__AKUSetInputDevice, sizeof(__pyx_k__AKUSetInputDevice), 0, 0, 1, 1},
  {&__pyx_n_s__AKUSetOrientation, __pyx_k__AKUSetOrientation, sizeof(__pyx_k__AKUSetOrientation), 0, 0, 1, 1},
  {&__pyx_n_s__AKUSetScreenDpi, __pyx_k__AKUSetScreenDpi, sizeof(__pyx_k__AKUSetScreenDpi), 0, 0, 1, 1},
  {&__pyx_n_s__AKUSetScreenSize, __pyx_k__AKUSetScreenSize, sizeof(__pyx_k__AKUSetScreenSize), 0, 0, 1, 1},
  {&__pyx_n_s__AKUSetViewSize, __pyx_k__AKUSetViewSize, sizeof(__pyx_k__AKUSetViewSize), 0, 0, 1, 1},
  {&__pyx_n_s__AKUUpdate, __pyx_k__AKUUpdate, sizeof(__pyx_k__AKUUpdate), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s__active, __pyx_k__active, sizeof(__pyx_k__active), 0, 0, 1, 1},
  {&__pyx_n_s__age, __pyx_k__age, sizeof(__pyx_k__age), 0, 0, 1, 1},
  {&__pyx_n_s__altitude, __pyx_k__altitude, sizeof(__pyx_k__altitude), 0, 0, 1, 1},
  {&__pyx_n_s__context, __pyx_k__context, sizeof(__pyx_k__context), 0, 0, 1, 1},
  {&__pyx_n_s__deviceID, __pyx_k__deviceID, sizeof(__pyx_k__deviceID), 0, 0, 1, 1},
  {&__pyx_n_s__down, __pyx_k__down, sizeof(__pyx_k__down), 0, 0, 1, 1},
  {&__pyx_n_s__dpi, __pyx_k__dpi, sizeof(__pyx_k__dpi), 0, 0, 1, 1},
  {&__pyx_n_s__filename, __pyx_k__filename, sizeof(__pyx_k__filename), 0, 0, 1, 1},
  {&__pyx_n_s__hAccuracy, __pyx_k__hAccuracy, sizeof(__pyx_k__hAccuracy), 0, 0, 1, 1},
  {&__pyx_n_s__heading, __pyx_k__heading, sizeof(__pyx_k__heading), 0, 0, 1, 1},
  {&__pyx_n_s__height, __pyx_k__height, sizeof(__pyx_k__height), 0, 0, 1, 1},
  {&__pyx_n_s__keyID, __pyx_k__keyID, sizeof(__pyx_k__keyID), 0, 0, 1, 1},
  {&__pyx_n_s__latitude, __pyx_k__latitude, sizeof(__pyx_k__latitude), 0, 0, 1, 1},
  {&__pyx_n_s__longitude, __pyx_k__longitude, sizeof(__pyx_k__longitude), 0, 0, 1, 1},
  {&__pyx_n_s__moaipy, __pyx_k__moaipy, sizeof(__pyx_k__moaipy), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__orientation, __pyx_k__orientation, sizeof(__pyx_k__orientation), 0, 0, 1, 1},
  {&__pyx_n_s__pause, __pyx_k__pause, sizeof(__pyx_k__pause), 0, 0, 1, 1},
  {&__pyx_n_s__pointer, __pyx_k__pointer, sizeof(__pyx_k__pointer), 0, 0, 1, 1},
  {&__pyx_n_s__script, __pyx_k__script, sizeof(__pyx_k__script), 0, 0, 1, 1},
  {&__pyx_n_s__sensorID, __pyx_k__sensorID, sizeof(__pyx_k__sensorID), 0, 0, 1, 1},
  {&__pyx_n_s__speed, __pyx_k__speed, sizeof(__pyx_k__speed), 0, 0, 1, 1},
  {&__pyx_n_s__total, __pyx_k__total, sizeof(__pyx_k__total), 0, 0, 1, 1},
  {&__pyx_n_s__touchID, __pyx_k__touchID, sizeof(__pyx_k__touchID), 0, 0, 1, 1},
  {&__pyx_n_s__vAccuracy, __pyx_k__vAccuracy, sizeof(__pyx_k__vAccuracy), 0, 0, 1, 1},
  {&__pyx_n_s__value, __pyx_k__value, sizeof(__pyx_k__value), 0, 0, 1, 1},
  {&__pyx_n_s__width, __pyx_k__width, sizeof(__pyx_k__width), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__z, __pyx_k__z, sizeof(__pyx_k__z), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  return 0;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "moaipy.pyx":3
 * cimport cmoai
 * 
 * def AKUCreateContext():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUCreateContext()
 * 
 */
  __pyx_k_codeobj_1 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUCreateContext, 3, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":6
 *     return cmoai.AKUCreateContext()
 * 
 * def AKUDeleteContext(context):             # <<<<<<<<<<<<<<
 *     cmoai.AKUDeleteContext(context)
 * 
 */
  __pyx_k_tuple_3 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__context)); if (unlikely(!__pyx_k_tuple_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_3);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_3));
  __pyx_k_codeobj_4 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUDeleteContext, 6, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":9
 *     cmoai.AKUDeleteContext(context)
 * 
 * def AKUGetContext():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUGetContext()
 * 
 */
  __pyx_k_codeobj_5 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUGetContext, 9, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":12
 *     return cmoai.AKUGetContext()
 * 
 * def AKUCreateContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUCreateContext()
 * 
 */
  __pyx_k_codeobj_6 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUCreateContext, 12, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":15
 *     cmoai.AKUCreateContext()
 * 
 * def AKUFinalize():             # <<<<<<<<<<<<<<
 *     cmoai.AKUFinalize()
 * 
 */
  __pyx_k_codeobj_7 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUFinalize, 15, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":18
 *     cmoai.AKUFinalize()
 * 
 * def AKUSetContext(context):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetContext(context)
 * 
 */
  __pyx_k_tuple_8 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__context)); if (unlikely(!__pyx_k_tuple_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_8);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_8));
  __pyx_k_codeobj_9 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_8, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUSetContext, 18, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":21
 *     cmoai.AKUSetContext(context)
 * 
 * def AKUGetLuaState():             # <<<<<<<<<<<<<<
 *     cdef long pointer = <long> cmoai.AKUGetLuaState()
 *     return pointer
 */
  __pyx_k_tuple_10 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__pointer)); if (unlikely(!__pyx_k_tuple_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_10);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_10));
  __pyx_k_codeobj_11 = (PyObject*)__Pyx_PyCode_New(0, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_10, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUGetLuaState, 21, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":29
 * # int             AKUMountVirtualDirectory        ( char* virtualPath, char* archive )
 * 
 * def AKURunScript(filename):             # <<<<<<<<<<<<<<
 *     cmoai.AKURunScript(filename)
 * 
 */
  __pyx_k_tuple_12 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__filename)); if (unlikely(!__pyx_k_tuple_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_12);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_12));
  __pyx_k_codeobj_13 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKURunScript, 29, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":32
 *     cmoai.AKURunScript(filename)
 * 
 * def AKURunString(script):             # <<<<<<<<<<<<<<
 *     cmoai.AKURunString(script)
 * 
 */
  __pyx_k_tuple_14 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__script)); if (unlikely(!__pyx_k_tuple_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_14);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_14));
  __pyx_k_codeobj_15 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKURunString, 32, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":45
 * 
 * # setup
 * def AKUFinalizeSim():             # <<<<<<<<<<<<<<
 *     cmoai.AKUFinalizeSim()
 * 
 */
  __pyx_k_codeobj_16 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUFinalizeSim, 45, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":48
 *     cmoai.AKUFinalizeSim()
 * 
 * def AKUInitializeSim():             # <<<<<<<<<<<<<<
 *     cmoai.AKUInitializeSim()
 * 
 */
  __pyx_k_codeobj_17 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUInitializeSim, 48, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":52
 * 
 * # management api
 * def AKUDetectGfxContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUDetectGfxContext()
 * 
 */
  __pyx_k_codeobj_18 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUDetectGfxContext, 52, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":55
 *     cmoai.AKUDetectGfxContext()
 * 
 * def AKUGetSimStep():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUGetSimStep()
 * 
 */
  __pyx_k_codeobj_19 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUGetSimStep, 55, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":58
 *     return cmoai.AKUGetSimStep()
 * 
 * def AKUPause(pause):             # <<<<<<<<<<<<<<
 *     cmoai.AKUPause(pause)
 * 
 */
  __pyx_k_tuple_20 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__pause)); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_20);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));
  __pyx_k_codeobj_21 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUPause, 58, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":61
 *     cmoai.AKUPause(pause)
 * 
 * def AKUReleaseGfxContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUReleaseGfxContext()
 * 
 */
  __pyx_k_codeobj_22 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_23, 61, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":64
 *     cmoai.AKUReleaseGfxContext()
 * 
 * def AKURender():             # <<<<<<<<<<<<<<
 *     cmoai.AKURender()
 * 
 */
  __pyx_k_codeobj_24 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKURender, 64, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":67
 *     cmoai.AKURender()
 * 
 * def AKUSetOrientation(orientation):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetOrientation(orientation)
 * 
 */
  __pyx_k_tuple_25 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__orientation)); if (unlikely(!__pyx_k_tuple_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_25);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_25));
  __pyx_k_codeobj_26 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_25, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUSetOrientation, 67, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":70
 *     cmoai.AKUSetOrientation(orientation)
 * 
 * def AKUSetScreenDpi(dpi):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetScreenDpi(dpi)
 * 
 */
  __pyx_k_tuple_27 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__dpi)); if (unlikely(!__pyx_k_tuple_27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_27);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_27));
  __pyx_k_codeobj_28 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_27, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUSetScreenDpi, 70, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_28)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":73
 *     cmoai.AKUSetScreenDpi(dpi)
 * 
 * def AKUSetScreenSize(width, height):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetScreenSize(width, height)
 * 
 */
  __pyx_k_tuple_29 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__width), ((PyObject *)__pyx_n_s__height)); if (unlikely(!__pyx_k_tuple_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_29);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_29));
  __pyx_k_codeobj_30 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_29, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUSetScreenSize, 73, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":76
 *     cmoai.AKUSetScreenSize(width, height)
 * 
 * def AKUSetViewSize(width, height):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetViewSize(width, height)
 * 
 */
  __pyx_k_tuple_31 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__width), ((PyObject *)__pyx_n_s__height)); if (unlikely(!__pyx_k_tuple_31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_31);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_31));
  __pyx_k_codeobj_32 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_31, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUSetViewSize, 76, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":79
 *     cmoai.AKUSetViewSize(width, height)
 * 
 * def AKUSoftReleaseGfxResources(age):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSoftReleaseGfxResources(age)
 * 
 */
  __pyx_k_tuple_33 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__age)); if (unlikely(!__pyx_k_tuple_33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_33);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_33));
  __pyx_k_codeobj_34 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_35, 79, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":82
 *     cmoai.AKUSoftReleaseGfxResources(age)
 * 
 * def AKUUpdate():             # <<<<<<<<<<<<<<
 *     cmoai.AKUUpdate()
 * 
 */
  __pyx_k_codeobj_36 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUUpdate, 82, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":92
 * 
 * # # input device api
 * def AKUReserveInputDevices(total):             # <<<<<<<<<<<<<<
 *     cmoai.AKUReserveInputDevices(total)
 * 
 */
  __pyx_k_tuple_37 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__total)); if (unlikely(!__pyx_k_tuple_37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_37);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_37));
  __pyx_k_codeobj_38 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_39, 92, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":95
 *     cmoai.AKUReserveInputDevices(total)
 * 
 * def AKUReserveInputDeviceSensors(deviceID, total):             # <<<<<<<<<<<<<<
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)
 * 
 */
  __pyx_k_tuple_40 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__total)); if (unlikely(!__pyx_k_tuple_40)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_40);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_40));
  __pyx_k_codeobj_41 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_42, 95, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":98
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)
 * 
 * def AKUSetInputConfigurationName(name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputConfigurationName(name)
 * 
 */
  __pyx_k_tuple_43 = PyTuple_Pack(1, ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_43);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_43));
  __pyx_k_codeobj_44 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_43, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_45, 98, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":101
 *     cmoai.AKUSetInputConfigurationName(name)
 * 
 * def AKUSetInputDevice(deviceID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDevice(deviceID, name)
 * 
 */
  __pyx_k_tuple_46 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_46)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_46);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_46));
  __pyx_k_codeobj_47 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s__AKUSetInputDevice, 101, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_47)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":104
 *     cmoai.AKUSetInputDevice(deviceID, name)
 * 
 * def AKUSetInputDeviceActive(deviceID, active):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)
 * 
 */
  __pyx_k_tuple_48 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__active)); if (unlikely(!__pyx_k_tuple_48)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_48);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_48));
  __pyx_k_codeobj_49 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_50, 104, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_49)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":107
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)
 * 
 * def AKUSetInputDeviceButton(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_51 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_51)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_51);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_51));
  __pyx_k_codeobj_52 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_53, 107, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_52)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":110
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceCompass(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_54 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_54);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_54));
  __pyx_k_codeobj_55 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_56, 110, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_55)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":113
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceKeyboard(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_57 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_57);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_57));
  __pyx_k_codeobj_58 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_59, 113, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_58)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":116
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceLevel(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_60 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_60);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_60));
  __pyx_k_codeobj_61 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_62, 116, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_61)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":119
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceLocation(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_63 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_63)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_63);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_63));
  __pyx_k_codeobj_64 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_65, 119, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_64)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":122
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)
 * 
 * def AKUSetInputDevicePointer(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_66 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_66)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_66);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_66));
  __pyx_k_codeobj_67 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_68, 122, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_67)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":125
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceTouch(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_69 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_69)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_69);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_69));
  __pyx_k_codeobj_70 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_69, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_71, 125, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_70)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":128
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceWheel(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceWheel(deviceID, sensorID, name)
 * 
 */
  __pyx_k_tuple_72 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__name)); if (unlikely(!__pyx_k_tuple_72)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_72);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_72));
  __pyx_k_codeobj_73 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_74, 128, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_73)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":133
 * 
 * # # input events api
 * def AKUEnqueueButtonEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_k_tuple_75 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__down)); if (unlikely(!__pyx_k_tuple_75)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_75);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_75));
  __pyx_k_codeobj_76 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_77, 133, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_76)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":136
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueCompassEvent(deviceID, sensorID, heading):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 */
  __pyx_k_tuple_78 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__heading)); if (unlikely(!__pyx_k_tuple_78)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_78);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_78));
  __pyx_k_codeobj_79 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_80, 136, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_79)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":139
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 * def AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_k_tuple_81 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__down)); if (unlikely(!__pyx_k_tuple_81)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_81);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_81));
  __pyx_k_codeobj_82 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_83, 139, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_82)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":142
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_k_tuple_84 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__down)); if (unlikely(!__pyx_k_tuple_84)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_84);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_84));
  __pyx_k_codeobj_85 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_84, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_86, 142, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_85)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":145
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 */
  __pyx_k_tuple_87 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__keyID), ((PyObject *)__pyx_n_s__down)); if (unlikely(!__pyx_k_tuple_87)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_87);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_87));
  __pyx_k_codeobj_88 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_87, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_89, 145, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_88)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":148
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 * def AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_k_tuple_90 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__down)); if (unlikely(!__pyx_k_tuple_90)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_90);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_90));
  __pyx_k_codeobj_91 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_92, 148, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_91)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":151
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 */
  __pyx_k_tuple_93 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__x), ((PyObject *)__pyx_n_s__y), ((PyObject *)__pyx_n_s__z)); if (unlikely(!__pyx_k_tuple_93)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_93);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_93));
  __pyx_k_codeobj_94 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_95, 151, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_94)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":154
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 * def AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)
 * 
 */
  __pyx_k_tuple_96 = PyTuple_Pack(8, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__longitude), ((PyObject *)__pyx_n_s__latitude), ((PyObject *)__pyx_n_s__altitude), ((PyObject *)__pyx_n_s__hAccuracy), ((PyObject *)__pyx_n_s__vAccuracy), ((PyObject *)__pyx_n_s__speed)); if (unlikely(!__pyx_k_tuple_96)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_96);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_96));
  __pyx_k_codeobj_97 = (PyObject*)__Pyx_PyCode_New(8, 0, 8, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_98, 154, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_97)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":157
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)
 * 
 * def AKUEnqueuePointerEvent(deviceID, sensorID, x, y):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 */
  __pyx_k_tuple_99 = PyTuple_Pack(4, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__x), ((PyObject *)__pyx_n_s__y)); if (unlikely(!__pyx_k_tuple_99)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_99);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_99));
  __pyx_k_codeobj_100 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_99, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_101, 157, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_100)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":160
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 * def AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 */
  __pyx_k_tuple_102 = PyTuple_Pack(6, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__touchID), ((PyObject *)__pyx_n_s__down), ((PyObject *)__pyx_n_s__x), ((PyObject *)__pyx_n_s__y)); if (unlikely(!__pyx_k_tuple_102)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_102);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_102));
  __pyx_k_codeobj_103 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_104, 160, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_103)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":163
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 * def AKUEnqueueTouchEventCancel(deviceID, sensorID):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 */
  __pyx_k_tuple_105 = PyTuple_Pack(2, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID)); if (unlikely(!__pyx_k_tuple_105)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_105);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_105));
  __pyx_k_codeobj_106 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_105, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_107, 163, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_106)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "moaipy.pyx":166
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 * def AKUEnqueueWheelEvent(deviceID, sensorID, value):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueWheelEvent(deviceID, sensorID, value)
 */
  __pyx_k_tuple_108 = PyTuple_Pack(3, ((PyObject *)__pyx_n_s__deviceID), ((PyObject *)__pyx_n_s__sensorID), ((PyObject *)__pyx_n_s__value)); if (unlikely(!__pyx_k_tuple_108)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_108);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_108));
  __pyx_k_codeobj_109 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_2, __pyx_n_s_110, 166, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_109)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initmoaipy(void); /*proto*/
PyMODINIT_FUNC initmoaipy(void)
#else
PyMODINIT_FUNC PyInit_moaipy(void); /*proto*/
PyMODINIT_FUNC PyInit_moaipy(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_moaipy(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("moaipy"), __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "moaipy")) {
      if (unlikely(PyDict_SetItemString(modules, "moaipy", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_moaipy) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "moaipy.pyx":3
 * cimport cmoai
 * 
 * def AKUCreateContext():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUCreateContext()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_1AKUCreateContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUCreateContext, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":6
 *     return cmoai.AKUCreateContext()
 * 
 * def AKUDeleteContext(context):             # <<<<<<<<<<<<<<
 *     cmoai.AKUDeleteContext(context)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_3AKUDeleteContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUDeleteContext, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":9
 *     cmoai.AKUDeleteContext(context)
 * 
 * def AKUGetContext():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUGetContext()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_5AKUGetContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUGetContext, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":12
 *     return cmoai.AKUGetContext()
 * 
 * def AKUCreateContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUCreateContext()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_7AKUCreateContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUCreateContext, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":15
 *     cmoai.AKUCreateContext()
 * 
 * def AKUFinalize():             # <<<<<<<<<<<<<<
 *     cmoai.AKUFinalize()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_9AKUFinalize, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUFinalize, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":18
 *     cmoai.AKUFinalize()
 * 
 * def AKUSetContext(context):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetContext(context)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_11AKUSetContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUSetContext, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":21
 *     cmoai.AKUSetContext(context)
 * 
 * def AKUGetLuaState():             # <<<<<<<<<<<<<<
 *     cdef long pointer = <long> cmoai.AKUGetLuaState()
 *     return pointer
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_13AKUGetLuaState, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUGetLuaState, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":29
 * # int             AKUMountVirtualDirectory        ( char* virtualPath, char* archive )
 * 
 * def AKURunScript(filename):             # <<<<<<<<<<<<<<
 *     cmoai.AKURunScript(filename)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_15AKURunScript, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKURunScript, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":32
 *     cmoai.AKURunScript(filename)
 * 
 * def AKURunString(script):             # <<<<<<<<<<<<<<
 *     cmoai.AKURunString(script)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_17AKURunString, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKURunString, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":45
 * 
 * # setup
 * def AKUFinalizeSim():             # <<<<<<<<<<<<<<
 *     cmoai.AKUFinalizeSim()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_19AKUFinalizeSim, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUFinalizeSim, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":48
 *     cmoai.AKUFinalizeSim()
 * 
 * def AKUInitializeSim():             # <<<<<<<<<<<<<<
 *     cmoai.AKUInitializeSim()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_21AKUInitializeSim, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUInitializeSim, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":52
 * 
 * # management api
 * def AKUDetectGfxContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUDetectGfxContext()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_23AKUDetectGfxContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUDetectGfxContext, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":55
 *     cmoai.AKUDetectGfxContext()
 * 
 * def AKUGetSimStep():             # <<<<<<<<<<<<<<
 *     return cmoai.AKUGetSimStep()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_25AKUGetSimStep, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUGetSimStep, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":58
 *     return cmoai.AKUGetSimStep()
 * 
 * def AKUPause(pause):             # <<<<<<<<<<<<<<
 *     cmoai.AKUPause(pause)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_27AKUPause, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUPause, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":61
 *     cmoai.AKUPause(pause)
 * 
 * def AKUReleaseGfxContext():             # <<<<<<<<<<<<<<
 *     cmoai.AKUReleaseGfxContext()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_29AKUReleaseGfxContext, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_23, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":64
 *     cmoai.AKUReleaseGfxContext()
 * 
 * def AKURender():             # <<<<<<<<<<<<<<
 *     cmoai.AKURender()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_31AKURender, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKURender, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":67
 *     cmoai.AKURender()
 * 
 * def AKUSetOrientation(orientation):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetOrientation(orientation)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_33AKUSetOrientation, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUSetOrientation, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":70
 *     cmoai.AKUSetOrientation(orientation)
 * 
 * def AKUSetScreenDpi(dpi):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetScreenDpi(dpi)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_35AKUSetScreenDpi, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUSetScreenDpi, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":73
 *     cmoai.AKUSetScreenDpi(dpi)
 * 
 * def AKUSetScreenSize(width, height):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetScreenSize(width, height)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_37AKUSetScreenSize, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUSetScreenSize, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":76
 *     cmoai.AKUSetScreenSize(width, height)
 * 
 * def AKUSetViewSize(width, height):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetViewSize(width, height)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_39AKUSetViewSize, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUSetViewSize, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":79
 *     cmoai.AKUSetViewSize(width, height)
 * 
 * def AKUSoftReleaseGfxResources(age):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSoftReleaseGfxResources(age)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_41AKUSoftReleaseGfxResources, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_35, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":82
 *     cmoai.AKUSoftReleaseGfxResources(age)
 * 
 * def AKUUpdate():             # <<<<<<<<<<<<<<
 *     cmoai.AKUUpdate()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_43AKUUpdate, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUUpdate, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":92
 * 
 * # # input device api
 * def AKUReserveInputDevices(total):             # <<<<<<<<<<<<<<
 *     cmoai.AKUReserveInputDevices(total)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_45AKUReserveInputDevices, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_39, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":95
 *     cmoai.AKUReserveInputDevices(total)
 * 
 * def AKUReserveInputDeviceSensors(deviceID, total):             # <<<<<<<<<<<<<<
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_47AKUReserveInputDeviceSensors, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_42, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":98
 *     cmoai.AKUReserveInputDeviceSensors(deviceID, total)
 * 
 * def AKUSetInputConfigurationName(name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputConfigurationName(name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_49AKUSetInputConfigurationName, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_45, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":101
 *     cmoai.AKUSetInputConfigurationName(name)
 * 
 * def AKUSetInputDevice(deviceID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDevice(deviceID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_51AKUSetInputDevice, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__AKUSetInputDevice, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":104
 *     cmoai.AKUSetInputDevice(deviceID, name)
 * 
 * def AKUSetInputDeviceActive(deviceID, active):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_53AKUSetInputDeviceActive, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_50, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":107
 *     cmoai.AKUSetInputDeviceActive(deviceID, active)
 * 
 * def AKUSetInputDeviceButton(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_55AKUSetInputDeviceButton, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_53, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":110
 *     cmoai.AKUSetInputDeviceButton(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceCompass(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_57AKUSetInputDeviceCompass, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_56, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":113
 *     cmoai.AKUSetInputDeviceCompass(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceKeyboard(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_59AKUSetInputDeviceKeyboard, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_59, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":116
 *     cmoai.AKUSetInputDeviceKeyboard(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceLevel(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_61AKUSetInputDeviceLevel, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_62, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":119
 *     cmoai.AKUSetInputDeviceLevel(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceLocation(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_63AKUSetInputDeviceLocation, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_65, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":122
 *     cmoai.AKUSetInputDeviceLocation(deviceID, sensorID, name)
 * 
 * def AKUSetInputDevicePointer(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_65AKUSetInputDevicePointer, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_68, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":125
 *     cmoai.AKUSetInputDevicePointer(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceTouch(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_67AKUSetInputDeviceTouch, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_71, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":128
 *     cmoai.AKUSetInputDeviceTouch(deviceID, sensorID, name)
 * 
 * def AKUSetInputDeviceWheel(deviceID, sensorID, name):             # <<<<<<<<<<<<<<
 *     cmoai.AKUSetInputDeviceWheel(deviceID, sensorID, name)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_69AKUSetInputDeviceWheel, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_74, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":133
 * 
 * # # input events api
 * def AKUEnqueueButtonEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_71AKUEnqueueButtonEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_77, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":136
 *     cmoai.AKUEnqueueButtonEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueCompassEvent(deviceID, sensorID, heading):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_73AKUEnqueueCompassEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_80, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":139
 *     cmoai.AKUEnqueueCompassEvent(deviceID, sensorID, heading)
 * 
 * def AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_75AKUEnqueueKeyboardAltEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_83, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":142
 *     cmoai.AKUEnqueueKeyboardAltEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_77AKUEnqueueKeyboardControlEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_86, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":145
 *     cmoai.AKUEnqueueKeyboardControlEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_79AKUEnqueueKeyboardEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_89, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":148
 *     cmoai.AKUEnqueueKeyboardEvent(deviceID, sensorID, keyID, down)
 * 
 * def AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_81AKUEnqueueKeyboardShiftEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_92, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":151
 *     cmoai.AKUEnqueueKeyboardShiftEvent(deviceID, sensorID, down)
 * 
 * def AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_83AKUEnqueueLevelEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_95, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":154
 *     cmoai.AKUEnqueueLevelEvent(deviceID, sensorID, x, y, z)
 * 
 * def AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_85AKUEnqueueLocationEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_98, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":157
 *     cmoai.AKUEnqueueLocationEvent(deviceID, sensorID, longitude, latitude, altitude, hAccuracy, vAccuracy, speed)
 * 
 * def AKUEnqueuePointerEvent(deviceID, sensorID, x, y):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_87AKUEnqueuePointerEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_101, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":160
 *     cmoai.AKUEnqueuePointerEvent(deviceID, sensorID, x, y)
 * 
 * def AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_89AKUEnqueueTouchEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_104, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":163
 *     cmoai.AKUEnqueueTouchEvent(deviceID, sensorID, touchID, down, x, y)
 * 
 * def AKUEnqueueTouchEventCancel(deviceID, sensorID):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_91AKUEnqueueTouchEventCancel, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_107, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":166
 *     cmoai.AKUEnqueueTouchEventCancel(deviceID, sensorID)
 * 
 * def AKUEnqueueWheelEvent(deviceID, sensorID, value):             # <<<<<<<<<<<<<<
 *     cmoai.AKUEnqueueWheelEvent(deviceID, sensorID, value)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6moaipy_93AKUEnqueueWheelEvent, NULL, __pyx_n_s__moaipy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_110, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "moaipy.pyx":1
 * cimport cmoai             # <<<<<<<<<<<<<<
 * 
 * def AKUCreateContext():
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyDict_SetItem(__pyx_d, __pyx_n_s____test__, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    __Pyx_AddTraceback("init moaipy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init moaipy");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %" CYTHON_FORMAT_SSIZE_T "d positional argument%s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_AKUContextID(AKUContextID val) {
    const AKUContextID neg_one = (AKUContextID)-1, const_zero = (AKUContextID)0;
    const int is_unsigned = const_zero < neg_one;
    if ((sizeof(AKUContextID) == sizeof(char))  ||
        (sizeof(AKUContextID) == sizeof(short))) {
        return PyInt_FromLong((long)val);
    } else if ((sizeof(AKUContextID) == sizeof(int)) ||
               (sizeof(AKUContextID) == sizeof(long))) {
        if (is_unsigned)
            return PyLong_FromUnsignedLong((unsigned long)val);
        else
            return PyInt_FromLong((long)val);
    } else if (sizeof(AKUContextID) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG)val);
        else
            return PyLong_FromLongLong((PY_LONG_LONG)val);
    } else {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        return _PyLong_FromByteArray(bytes, sizeof(AKUContextID),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE AKUContextID __Pyx_PyInt_from_py_AKUContextID(PyObject* x) {
    const AKUContextID neg_one = (AKUContextID)-1, const_zero = (AKUContextID)0;
    const int is_unsigned = const_zero < neg_one;
    if (sizeof(AKUContextID) == sizeof(char)) {
        if (is_unsigned)
            return (AKUContextID)__Pyx_PyInt_AsUnsignedChar(x);
        else
            return (AKUContextID)__Pyx_PyInt_AsSignedChar(x);
    } else if (sizeof(AKUContextID) == sizeof(short)) {
        if (is_unsigned)
            return (AKUContextID)__Pyx_PyInt_AsUnsignedShort(x);
        else
            return (AKUContextID)__Pyx_PyInt_AsSignedShort(x);
    } else if (sizeof(AKUContextID) == sizeof(int)) {
        if (is_unsigned)
            return (AKUContextID)__Pyx_PyInt_AsUnsignedInt(x);
        else
            return (AKUContextID)__Pyx_PyInt_AsSignedInt(x);
    } else if (sizeof(AKUContextID) == sizeof(long)) {
        if (is_unsigned)
            return (AKUContextID)__Pyx_PyInt_AsUnsignedLong(x);
        else
            return (AKUContextID)__Pyx_PyInt_AsSignedLong(x);
    } else if (sizeof(AKUContextID) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return (AKUContextID)__Pyx_PyInt_AsUnsignedLongLong(x);
        else
            return (AKUContextID)__Pyx_PyInt_AsSignedLongLong(x);
    }  else {
        #if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
        PyErr_SetString(PyExc_RuntimeError,
                        "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
        #else
        AKUContextID val;
        PyObject *v = __Pyx_PyNumber_Int(x);
        #if PY_MAJOR_VERSION < 3
        if (likely(v) && !PyLong_Check(v)) {
            PyObject *tmp = v;
            v = PyNumber_Long(tmp);
            Py_DECREF(tmp);
        }
        #endif
        if (likely(v)) {
            int one = 1; int is_little = (int)*(unsigned char *)&one;
            unsigned char *bytes = (unsigned char *)&val;
            int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                          bytes, sizeof(val),
                                          is_little, !is_unsigned);
            Py_DECREF(v);
            if (likely(!ret))
                return val;
        }
        #endif
        return (AKUContextID)-1;
    }
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif /*__PYX_DEFAULT_STRING_ENCODING_IS_ASCII*/
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else /* PY_VERSION_HEX < 0x03030000 */
        if (PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_DATA_SIZE(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
        return PyUnicode_AsUTF8AndSize(o, length);
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
#endif /* PY_VERSION_HEX < 0x03030000 */
    } else
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII  || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT */
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (r < 0) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       if ((val != (unsigned PY_LONG_LONG)-1) || !PyErr_Occurred())
           PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
